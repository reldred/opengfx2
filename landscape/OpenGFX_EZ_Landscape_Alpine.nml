//Define the NewGRF
grf {
	grfid: "RJE\18";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESCRIPTION);
	url:  string(STR_GRF_URL);
	version: 1;
	min_compatible_version: 1;
}

if (!extended_feature_test("new_landscape")) {
	error(FATAL, string(STR_UNSUPPORTED_VERSION));
}

//Template for generic sprite
//x: X offset
//y: Y offset
//w: Width
//h: Height
//ox: X alignment offset
//oy: Y alignment offset
//z: Zoomlevel
template template_general(x, y, w, h, ox, oy, z) {
	[ x*z, y*z, w*z, h*z, ox*z, oy*z]
}



//Templates
template template_selectors_tile(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   7*z ]
	[  81*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   7*z ]
	[ 161*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   7*z ]
	[ 241*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   7*z ]

	[ 321*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   7*z ]
	[ 399*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   7*z ]
	[ 479*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   7*z ]
	[ 559*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   7*z ]

	[ 639*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -1*z ]
	[ 719*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -1*z ]
	[ 799*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -1*z ]
	[ 879*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -1*z ]

	[ 959*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -1*z ]
	[1039*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -1*z ]
	[1119*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -1*z ]
	[1197*z+x*z, 1*z+y*z, 64*z, 48*z-1, -31*z,  -9*z ]

	[1277*z+x*z, 1*z+y*z, 64*z, 16*z-1, -31*z,   7*z ]
	[1357*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -1*z ]
	[1437*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -1*z ]
}

//Replace terrain tiles
//Templates
template template_groundtiles(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[  81*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 161*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 241*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]

	[ 321*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 399*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 479*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 559*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]

	[ 639*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 719*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 799*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[ 879*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]

	[ 959*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1039*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1119*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1197*z+x*z, 1*z+y*z, 64*z, 48*z-1, -31*z, -16*z ]

	[1277*z+x*z, 1*z+y*z, 64*z, 16*z-1, -31*z,   0*z ]
	[1357*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1437*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
}

template template_groundtiles_extra(x, y, z) {
	[1502*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1567*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1632*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1697*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_watertiles_single(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_watertiles_core(x, y, z) {
	[ 321*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[  81*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 161*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 639*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]

	[ 479*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 959*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 241*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 719*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
}

template template_watertiles_extended(x, y, z) {
	[1277*z+x*z, 1*z+y*z, 64*z, 16*z-1, -31*z,   0*z ]
	[1357*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[ 559*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1197*z+x*z, 1*z+y*z, 64*z, 48*z-1, -31*z, -16*z ]
	[ 879*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	
	[1039*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1119*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1437*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[ 399*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 799*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
}

template template_watertiles_full(x, y, z) {
	[1277*z+x*z, 1*z+y*z, 64*z, 16*z-1, -31*z,   0*z ]
	[  81*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 161*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 241*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	
	[ 321*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1357*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[ 479*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 559*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	
	[ 639*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 719*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1197*z+x*z, 1*z+y*z, 64*z, 48*z-1, -31*z, -16*z ]
	[ 879*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	
	[ 959*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1039*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1119*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1437*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
}

template template_farms_fences(x, y, z) {
	[  35*z+x*z, 1*z+y*z, 33*z, 22*z-1, -30*z,  10*z ]
	[   1*z+x*z, 1*z+y*z, 33*z, 22*z-1,   0*z,  10*z ]
	[ 171*z+x*z, 1*z+y*z, 33*z, 30*z-1, -30*z,   2*z ]
	[ 137*z+x*z, 1*z+y*z, 33*z, 30*z-1,   0*z,   2*z ]
	[ 103*z+x*z, 1*z+y*z, 33*z, 14*z-1, -30*z,  18*z ]
	[  69*z+x*z, 1*z+y*z, 33*z, 14*z-1,   0*z,  17*z ]
}

//Universal
//Black tile
replace terrainspecial_black(1004, "../graphics/terrain/64/general_blacktile_8bpp.png") {
	template_watertiles_single(0, 0, 1)
}

//Water tile & bouy
	replace terrain_water(4061, "../graphics/terrain/64/universal_watertiles_8bpp.png") {
		template_watertiles_single(0, 0, 1)
	}

	replace terrain_water_bouy(1004, "../graphics/terrain/64/universal_bouy_8bpp.png") {
		template_watertiles_single(0, 0, 1)
	}

//Concrete
replace terrainspecial_concrete(1420, "../graphics/terrain/64/general_concretetiles_8bpp.png") {
	template_watertiles_single(0, 0, 1)
}

//Base terrain tiles
	//Arctic
	//Grass 3/3
	replace terrain_arctic_grass_33(3981, "../graphics/terrain/64/temperate_groundtiles_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}

	//Grass 2/3
	replace terrain_arctic_grass_23(3962, "../graphics/terrain/64/temperate_groundtiles_8bpp.png") {
		template_groundtiles(0, 48, 1)
	}

	//Grass 1/3
	replace terrain_arctic_grass_13(3943, "../graphics/terrain/64/temperate_groundtiles_8bpp.png") {
		template_groundtiles(0, 96, 1)
	}


	//Grass 0/3 (bare earth)
	replace terrain_arctic_grass_03(3924, "../graphics/terrain/64/temperate_groundtiles_8bpp.png") {
		template_groundtiles(0, 144, 1)
	}

	
	//Rough
	replace terrain_arctic_rough(4000, "../graphics/terrain/64/temperate_groundtiles_rough_8bpp.png") {
		template_groundtiles(0, 0, 1)
		template_groundtiles_extra(0, 0, 1)
	}

	//Rocks (unused rock graphics not replaced)
	replace terrain_arctic_rocks(4023, "../graphics/terrain/64/temperate_groundtiles_rocks_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}

	//Shore
	replace terrain_arctic_shore_core(4062, "../graphics/terrain/64/pygen/temperate_grass_shoretiles_8bpp.png") {
		template_watertiles_core(0, 0, 1)
	}

	//New shore tiles
	replacenew terrain_arctic_shore_extended(COAST_TILES, "../graphics/terrain/64/pygen/temperate_grass_shoretiles_8bpp.png") {
		template_watertiles_full(0, 0, 1)
	}
	
	//Snow 4/4
	replace terrain_arctic_snow_44(4550, "../graphics/terrain/64/arctic_groundtiles_snow_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}
	
	//Snow 3/4
	replace terrain_arctic_snow_34(4531, "../graphics/terrain/64/temperate_groundtiles_snowtransition_8bpp.png") {
		template_groundtiles(0, 96, 1)
	}

	
	//Snow 2/4
	replace terrain_arctic_snow_24(4512, "../graphics/terrain/64/temperate_groundtiles_snowtransition_8bpp.png") {
		template_groundtiles(0, 48, 1)
	}
	
	//Snow 1/4
	replace terrain_arctic_snow_14(4493, "../graphics/terrain/64/temperate_groundtiles_snowtransition_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}

//Farmland
replace terrain_farmland_field(4126, "../graphics/terrain/64/farm_groundtiles_8bpp.png") {
	template_groundtiles(0, 0, 1)
	template_groundtiles(0, 49, 1)
	template_groundtiles(0, 98, 1)
	template_groundtiles(0, 147, 1)
	template_groundtiles(0, 196, 1)
	template_groundtiles(0, 245, 1)
	template_groundtiles(0, 294, 1)
	template_groundtiles(0, 343, 1)
	template_groundtiles(0, 392, 1)
}
alternative_sprites(terrain_farmland_field, ZOOM_LEVEL_IN_2X, BIT_DEPTH_8BPP, "../graphics/terrain/128/farm_groundtiles_8bpp.png") {
	template_groundtiles(0, 0, 2)
	template_groundtiles(0, 49, 2)
	template_groundtiles(0, 98, 2)
	template_groundtiles(0, 147, 2)
	template_groundtiles(0, 196, 2)
	template_groundtiles(0, 245, 2)
	template_groundtiles(0, 294, 2)
	template_groundtiles(0, 343, 2)
	template_groundtiles(0, 392, 2)
}
alternative_sprites(terrain_farmland_field, ZOOM_LEVEL_IN_4X, BIT_DEPTH_8BPP, "../graphics/terrain/256/farm_groundtiles_8bpp.png") {
	template_groundtiles(0, 0, 4)
	template_groundtiles(0, 49, 4)
	template_groundtiles(0, 98, 4)
	template_groundtiles(0, 147, 4)
	template_groundtiles(0, 196, 4)
	template_groundtiles(0, 245, 4)
	template_groundtiles(0, 294, 4)
	template_groundtiles(0, 343, 4)
	template_groundtiles(0, 392, 4)
}

//Farm fences
replace terrain_farms_fences(4090, "../graphics/terrain/64/farm_fences_8bpp.png") {
	template_farms_fences(0, 0, 1)
	template_farms_fences(0, 31, 1)
	template_farms_fences(0, 62, 1)
	template_farms_fences(0, 93, 1)
	template_farms_fences(0, 124, 1)
	template_farms_fences(0, 155, 1)
}

//Replace foundations
//Templates
template template_foundations_base(x, y, z) {
	[   1*z+x*z,  1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z,  1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z,  1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z,  1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z,  1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z,  1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z,  1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z,  1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
}

template template_foundations_slope_halftile(x, y, z) {
	[   1*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z,   1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z,   1*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z,   1*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z,  42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z,  42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z,  42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z,  42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z,  42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z,  42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z,  42*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z,  42*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z,  83*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z,  83*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z,  83*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z,  83*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z,  83*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z,  83*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	
	[ 481*z+x*z,  83*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z,  83*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 124*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 124*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 124*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 124*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 124*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 124*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 124*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 124*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 165*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 165*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 165*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 165*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 165*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 165*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 165*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 165*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 206*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 206*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 206*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 206*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	
	[ 321*z+x*z, 206*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 206*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 206*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 206*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 247*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 247*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 247*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 288*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 288*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 161*z+x*z, 288*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 288*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 288*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 288*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 288*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 288*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 329*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 329*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]

	[ 161*z+x*z, 329*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 241*z+x*z, 329*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 321*z+x*z, 329*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 401*z+x*z, 329*z+y*z, 64*z, 33*z-1, -31*z, -9*z, NOCROP ]
	[ 481*z+x*z, 329*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[ 561*z+x*z, 329*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[   1*z+x*z, 370*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	[  81*z+x*z, 370*z+y*z, 64*z, 41*z-1, -31*z, -9*z, NOCROP ]
	
	[   1*z+x*z, 411*z+y*z, 64*z, 41*z-1, -15*z, -17*z, NOCROP ]
	[  81*z+x*z, 411*z+y*z, 64*z, 34*z-1, -31*z, -25*z, NOCROP ]
	[ 161*z+x*z, 411*z+y*z, 64*z, 41*z-1, -47*z, -17*z, NOCROP ]
	[ 241*z+x*z, 411*z+y*z, 64*z, 34*z-1, -31*z,  -9*z, NOCROP ]
	[ 321*z+x*z, 411*z+y*z, 64*z, 41*z-1, -15*z, -17*z, NOCROP ]
	[ 401*z+x*z, 411*z+y*z, 64*z, 34*z-1, -31*z, -25*z, NOCROP ]
	[ 481*z+x*z, 411*z+y*z, 64*z, 41*z-1, -47*z, -17*z, NOCROP ]
	[ 561*z+x*z, 411*z+y*z, 64*z, 34*z-1, -31*z,  -9*z, NOCROP ]
	
	[   1*z+x*z, 452*z+y*z, 64*z, 41*z-1, -15*z, -17*z, NOCROP ]
	[  81*z+x*z, 452*z+y*z, 64*z, 34*z-1, -31*z, -25*z, NOCROP ]
	[ 161*z+x*z, 452*z+y*z, 64*z, 41*z-1, -47*z, -17*z, NOCROP ]
	[ 241*z+x*z, 452*z+y*z, 64*z, 34*z-1, -31*z,  -9*z, NOCROP ]
	[ 321*z+x*z, 452*z+y*z, 64*z, 41*z-1, -15*z, -17*z, NOCROP ]
	[ 401*z+x*z, 452*z+y*z, 64*z, 34*z-1, -31*z, -25*z, NOCROP ]
	[ 481*z+x*z, 452*z+y*z, 64*z, 41*z-1, -47*z, -17*z, NOCROP ]
	[ 561*z+x*z, 452*z+y*z, 64*z, 34*z-1, -31*z,  -9*z, NOCROP ]
}

//Climate specific foundations
	replace terrain_foundations_arctic_base (990, "../graphics/foundations/64/foundations_temperate_8bpp.png") {
		template_foundations_base(0, 0, 1)
	}

	replacenew terrain_foundations_arctic_slope_halftile (FOUNDATIONS_SLOPES_HALFTILES, "../graphics/foundations/64/foundations_temperate_8bpp.png") {
		template_foundations_slope_halftile(0, 82, 1)
	}


//Replace canals and rivers
//Templates
template template_waterslopes(x, y, z) {
	//Flat tile
	[ 322*z+x*z,   1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	//Sloped tiles
	[  81*z+x*z,   1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 241*z+x*z,   1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[   1*z+x*z,   1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 161*z+x*z,   1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
}

template template_waterfeature_flat(x, y, z) {
	//Straight sides
	[  27*z+x*z,  41*z+y*z, 38*z, 19*z-1,  -5*z,   0*z ]
	[  27*z+x*z,  14*z+y*z, 38*z, 19*z-1,  -5*z,  13*z ]
	[   1*z+x*z,  54*z+y*z, 38*z, 19*z-1, -31*z,  13*z ]
	[   1*z+x*z,   1*z+y*z, 38*z, 19*z-1, -31*z,   0*z ]
	//Outer corners
	[  41*z+x*z,  91*z+y*z, 24*z, 12*z-1,   9*z,  10*z ]
	[  21*z+x*z, 101*z+y*z, 24*z, 12*z-1, -11*z,  20*z ]
	[   1*z+x*z,  91*z+y*z, 24*z, 12*z-1, -31*z,  10*z ]
	[  21*z+x*z,  81*z+y*z, 24*z, 12*z-1, -11*z,   0*z ]
	//Inner corners
	[  49*z+x*z, 133*z+y*z, 16*z,  8*z-1,  17*z,  12*z ]
	[  25*z+x*z, 145*z+y*z, 16*z,  8*z-1,  -7*z,  24*z ]
	[   1*z+x*z, 133*z+y*z, 16*z,  8*z-1, -31*z,  12*z ]
	[  25*z+x*z, 121*z+y*z, 16*z,  8*z-1,  -7*z,   0*z ]	
}

template template_waterfeature_slopes(x, y, z) {
	//Flat
	//Straight sides
	[  27*z+x*z,  41*z+y*z, 38*z, 19*z-1,  -5*z,   0*z ]
	[  27*z+x*z,  14*z+y*z, 38*z, 19*z-1,  -5*z,  13*z ]
	[   1*z+x*z,  54*z+y*z, 38*z, 19*z-1, -31*z,  13*z ]
	[   1*z+x*z,   1*z+y*z, 38*z, 19*z-1, -31*z,   0*z ]
	//Outer corners
	[  41*z+x*z,  91*z+y*z, 24*z, 12*z-1,   9*z,  10*z ]
	[  21*z+x*z, 101*z+y*z, 24*z, 12*z-1, -11*z,  20*z ]
	[   1*z+x*z,  91*z+y*z, 24*z, 12*z-1, -31*z,  10*z ]
	[  21*z+x*z,  81*z+y*z, 24*z, 12*z-1, -11*z,   0*z ]
	//Inner corners
	[  49*z+x*z, 133*z+y*z, 16*z,  8*z-1,  17*z,  12*z ]
	[  25*z+x*z, 145*z+y*z, 16*z,  8*z-1,  -7*z,  24*z ]
	[   1*z+x*z, 133*z+y*z, 16*z,  8*z-1, -31*z,  12*z ]
	[  25*z+x*z, 121*z+y*z, 16*z,  8*z-1,  -7*z,   0*z ]
	//NW down
	//Straight sides
	[ 223*z+x*z,  41*z+y*z, 37*z, 18*z-1,  -4*z,   0*z ]
	[ 223*z+x*z,   7*z+y*z, 37*z, 18*z-1,  -4*z,   6*z ]
	[ 196*z+x*z,  47*z+y*z, 37*z, 18*z-1, -31*z,   6*z ]
	[ 196*z+x*z,   1*z+y*z, 37*z, 18*z-1, -31*z,   0*z ]
	//Outer corners
	[ 236*z+x*z,  86*z+y*z, 24*z,  9*z-1,   9*z,   5*z ]
	[ 216*z+x*z,  96*z+y*z, 24*z,  9*z-1, -11*z,  16*z ]
	[ 196*z+x*z,  91*z+y*z, 24*z,  9*z-1, -31*z,  10*z ]
	[ 216*z+x*z,  81*z+y*z, 24*z,  9*z-1, -11*z,   0*z ]
	//Inner corners
	[ 244*z+x*z, 127*z+y*z, 16*z,  6*z-1,  17*z,   6*z ]
	[ 220*z+x*z, 139*z+y*z, 16*z,  6*z-1,  -7*z,  18*z ]
	[ 196*z+x*z, 133*z+y*z, 16*z,  6*z-1, -31*z,  12*z ]
	[ 220*z+x*z, 121*z+y*z, 16*z,  6*z-1,  -7*z,   0*z ]
	//SW down
	//Straight sides
	[  92*z+x*z,  41*z+y*z, 38*z, 27*z-1,  -5*z,  -8*z ]
	[  92*z+x*z,  14*z+y*z, 38*z, 27*z-1,  -5*z,   5*z ]
	[  66*z+x*z,  54*z+y*z, 38*z, 27*z-1, -31*z,   5*z ]
	[  66*z+x*z,   1*z+y*z, 38*z, 27*z-1, -31*z,  -8*z ]
	//Outer corners
	[ 106*z+x*z,  91*z+y*z, 24*z, 15*z-1,   9*z,   2*z ]
	[  86*z+x*z, 106*z+y*z, 24*z, 15*z-1, -11*z,  17*z ]
	[  66*z+x*z,  96*z+y*z, 24*z, 15*z-1, -31*z,   7*z ]
	[  86*z+x*z,  81*z+y*z, 24*z, 15*z-1, -11*z,  -8*z ]
	//Inner corners
	[ 114*z+x*z, 133*z+y*z, 16*z, 10*z-1,  17*z,   4*z ]
	[  90*z+x*z, 151*z+y*z, 16*z, 10*z-1,  -7*z,  22*z ]
	[  66*z+x*z, 139*z+y*z, 16*z, 10*z-1, -31*z,  10*z ]
	[  90*z+x*z, 121*z+y*z, 16*z, 10*z-1,  -7*z,  -8*z ]
	//NE down
	//Straight sides
	[ 158*z+x*z,  41*z+y*z, 37*z, 18*z-1,  -4*z,   0*z ]
	[ 158*z+x*z,   7*z+y*z, 37*z, 18*z-1,  -4*z,   6*z ]
	[ 131*z+x*z,  47*z+y*z, 37*z, 18*z-1, -31*z,   6*z ]
	[ 131*z+x*z,   1*z+y*z, 37*z, 18*z-1, -31*z,   0*z ]
	//Outer corners
	[ 171*z+x*z,  91*z+y*z, 24*z,  9*z-1,   9*z,  10*z ]
	[ 151*z+x*z,  96*z+y*z, 24*z,  9*z-1, -11*z,  16*z ]
	[ 131*z+x*z,  86*z+y*z, 24*z,  9*z-1, -31*z,   5*z ]
	[ 151*z+x*z,  81*z+y*z, 24*z,  9*z-1, -11*z,   0*z ]
	//Inner corners
	[ 179*z+x*z, 133*z+y*z, 16*z,  6*z-1,  17*z,  12*z ]
	[ 155*z+x*z, 139*z+y*z, 16*z,  6*z-1,  -7*z,  18*z ]
	[ 131*z+x*z, 127*z+y*z, 16*z,  6*z-1, -31*z,   6*z ]
	[ 155*z+x*z, 121*z+y*z, 16*z,  6*z-1,  -7*z,   0*z ]
	//SE down
	//Straight sides
	[ 287*z+x*z,  41*z+y*z, 38*z, 27*z-1,  -5*z,  -8*z ]
	[ 287*z+x*z,  14*z+y*z, 38*z, 27*z-1,  -5*z,   5*z ]
	[ 261*z+x*z,  54*z+y*z, 38*z, 27*z-1, -31*z,   5*z ]
	[ 261*z+x*z,   1*z+y*z, 38*z, 27*z-1, -31*z,  -8*z ]
	//Outer corners
	[ 301*z+x*z,  96*z+y*z, 24*z, 15*z-1,   9*z,   7*z ]
	[ 281*z+x*z, 106*z+y*z, 24*z, 15*z-1, -11*z,  17*z ]
	[ 261*z+x*z,  91*z+y*z, 24*z, 15*z-1, -31*z,   2*z ]
	[ 281*z+x*z,  81*z+y*z, 24*z, 15*z-1, -11*z,  -8*z ]
	//Inner corners
	[ 309*z+x*z, 139*z+y*z, 16*z, 10*z-1,  17*z,  10*z ]
	[ 285*z+x*z, 151*z+y*z, 16*z, 10*z-1,  -7*z,  22*z ]
	[ 261*z+x*z, 133*z+y*z, 16*z, 10*z-1, -31*z,   4*z ]
	[ 285*z+x*z, 121*z+y*z, 16*z, 10*z-1,  -7*z,  -8*z ]
}

spriteset (waterfeature_river_waterslopes, "../graphics/terrain/64/universal_watertiles_8bpp.png") {
	template_waterslopes(80, 0, 1)
}

spriteset (waterfeature_canal_waterslopes, "../graphics/terrain/64/universal_watertiles_8bpp.png") {
	template_waterslopes(80, 0, 1)
}

spriteset (waterfeature_canal_arctic, "../graphics/infrastructure/64/pygen/canal_temperate_grass_8bpp.png") {
	template_waterfeature_flat(0, 0, 1)
}

spriteset (waterfeature_canal_arctic_snow, "../graphics/infrastructure/64/pygen/canal_arctic_snow_8bpp.png") {
	template_waterfeature_flat(0, 0, 1)
}

switch (FEAT_CANALS, SELF, switch_waterfeature_canal_arctic_snowline, [
	terrain_type
]) {
	TILETYPE_NORMAL: waterfeature_canal_arctic;
	TILETYPE_SNOW: waterfeature_canal_arctic_snow;
	waterfeature_canal_arctic;
}

switch (FEAT_CANALS, SELF, switch_waterfeature_canal_climate, [
	climate
]) {
	CLIMATE_ARCTIC: switch_waterfeature_canal_arctic_snowline;

	switch_waterfeature_canal_arctic_snowline;
}

switch (FEAT_CANALS, SELF, switch_waterfeature_canal_slopes_climate, [
	climate
]) {
	waterfeature_canal_waterslopes;
}

item(FEAT_CANALS, waterfeature_canal_slopes, WF_WATERCLIFFS) {
	property {
		graphic_flags: bitmask(WATERFEATURE_ALTERNATIVE_SPRITES);
	}
	graphics {
		default: switch_waterfeature_canal_slopes_climate;
	}
}

item(FEAT_CANALS, waterfeature_canal, WF_DIKES) {
	graphics {
		default: switch_waterfeature_canal_climate;
	}
}


spriteset (waterfeature_river_arctic, "../graphics/infrastructure/64/pygen/river_temperate_grass_8bpp.png") {
	template_waterfeature_slopes(0, 0, 1)
}

spriteset (waterfeature_river_arctic_shores, "../graphics/infrastructure/64/pygen/river_temperate_grass_shores_8bpp.png") {
	template_waterfeature_slopes(0, 0, 1)
}

spriteset (waterfeature_river_arctic_snow, "../graphics/infrastructure/64/pygen/river_arctic_snow_8bpp.png") {
	template_waterfeature_slopes(0, 0, 1)
}

switch (FEAT_CANALS, SELF, switch_waterfeature_river_arctic_snowline, [
	terrain_type
]) {
	TILETYPE_NORMAL: waterfeature_river_arctic;
	TILETYPE_SNOW: waterfeature_river_arctic_snow;
	waterfeature_river_arctic;
}

switch (FEAT_CANALS, SELF, switch_waterfeature_river_arctic_elevation, [
	tile_height
]) {
	0: waterfeature_river_arctic_shores;
	switch_waterfeature_river_arctic_snowline;
}

switch (FEAT_CANALS, SELF, switch_waterfeature_river_climate, [
	climate
]) {
	CLIMATE_ARCTIC: switch_waterfeature_river_arctic_elevation;

	switch_waterfeature_river_arctic_elevation;

}

switch (FEAT_CANALS, SELF, switch_waterfeature_river_slopes_climate, [
	climate
]) {
	waterfeature_river_waterslopes;
}

item(FEAT_CANALS, waterfeature_river_slopes, WF_RIVER_SLOPE) {
	property {
		graphic_flags: bitmask(WATERFEATURE_ALTERNATIVE_SPRITES);
	}
	graphics {
		default: switch_waterfeature_river_slopes_climate;
	}
}

item(FEAT_CANALS, waterfeature_river_banks, WF_RIVERBANKS) {
	graphics {
		default: switch_waterfeature_river_climate;
	}
}

//Replace infrastructure tiles
//Templates
template template_roadtiles(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[  66*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 131*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 196*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 261*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 326*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 391*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 456*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 521*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 586*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 651*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]

	[ 976*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1041*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1106*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1171*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]

	[ 846*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 911*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 716*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 781*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_roadstoptiles(x, y, z) {
	[1366*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1431*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1236*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1301*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_railtiles(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[  66*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 131*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 196*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 261*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 326*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 391*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 456*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 521*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 586*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 651*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 716*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]

	[ 781*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 846*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 911*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 976*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1041*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1106*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1171*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1236*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]

	[1301*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1366*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1431*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[1496*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	
	[1561*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[1626*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_railoverlay_base(x, y, z) {
	[  1*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 66*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[131*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[196*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[261*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[326*z+x*z,  1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_railoverlay_extra(x, y, z) {
	[  1*z+x*z, 33*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 66*z+x*z, 33*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[131*z+x*z, 33*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[196*z+x*z, 33*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
}

template template_railcrossing(x, y, z) {
    [  66*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
    [ 196*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 131*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
}

template template_rail_fences(x, y, z) {
    [   1*z+x*z, 1*z+y*z, 33*z, 22*z-1, -31*z,  -7*z ]
	[  35*z+x*z, 1*z+y*z, 33*z, 22*z-1,   1*z,  -7*z ]
	[  69*z+x*z, 1*z+y*z,  2*z, 38*z-1,   1*z, -22*z ]
	[  72*z+x*z, 1*z+y*z, 65*z,  6*z-1, -31*z,  -7*z ]
	[ 138*z+x*z, 1*z+y*z, 33*z, 14*z-1, -31*z,  -7*z ]
	[ 172*z+x*z, 1*z+y*z, 33*z, 14*z-1,   1*z,  -7*z ]
	[ 206*z+x*z, 1*z+y*z, 33*z, 30*z-1, -31*z, -14*z ]
	[ 240*z+x*z, 1*z+y*z, 33*z, 30*z-1,   1*z, -14*z ]
}

template template_road_reconstruction(x, y, z) {
	[  66*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 131*z+x*z, 1*z+y*z, 19*z, 15*z-1,  -9*z,  -7*z ]
	[ 151*z+x*z, 1*z+y*z, 19*z, 15*z-1,  -9*z,  -7*z ]
}

//Universal
//Town roads
replace roads_town(1313, "../graphics/infrastructure/64/pygen/road_general_concrete_8bpp.png") {
	template_roadtiles(0, 0, 1)
}

//Road stop roads
replace roads_busstop(2692, "../graphics/infrastructure/64/pygen/road_general_concrete_8bpp.png") {
	template_roadstoptiles(0, 0, 1)
}

//Road stop roads
replace roads_lorrystop(2708, "../graphics/infrastructure/64/pygen/road_general_concrete_8bpp.png") {
	template_roadstoptiles(0, 0, 1)
}

//Climate specific roads
	//Arctic
	replace roads_arctic(1332, "../graphics/infrastructure/64/pygen/road_temperate_grass_8bpp.png") {
		template_roadtiles(0, 0, 1)
	}

	//Snow
	replace roads_arctic_snow(1351, "../graphics/infrastructure/64/pygen/road_arctic_snow_8bpp.png") {
		template_roadtiles(0, 0, 1)
	}

replace roads_reconstruction(1414, "../graphics/infrastructure/64/road_reconstruction_8bpp.png") {
	template_road_reconstruction(0, 0, 1)
}

//Climate specific rail

	//Arctic
	replace rail_arctic(1011, "../graphics/infrastructure/64/pygen/rail_temperate_grass_8bpp.png") {
		template_railtiles(0, 0, 1)
	}

	//Snow
	replace rail_arctic_snow(1037, "../graphics/infrastructure/64/pygen/rail_arctic_snow_8bpp.png") {
		template_railtiles(0, 0, 1)
	}

//General rail overlays
//Base/junctions
replace rail_overlay_base(1005, "../graphics/infrastructure/64/rail_bits_masked_8bpp.png") {
	template_railoverlay_base(0, 0, 1)
}

//Extra/slopes
replacenew rail_overlay_extra(SLOPED_RAILS, "../graphics/infrastructure/64/rail_bits_masked_8bpp.png", 0) {
	template_railoverlay_extra(0, 0, 1)
}

//Rail extras
//Fences
replace rail_fences(1301, "../graphics/infrastructure/64/rail_fences_8bpp.png") {
	template_rail_fences(0, 0, 1)
}

//Climate specific monorail
	//Arctic
	replace monorail_arctic(1093, "../graphics/infrastructure/64/pygen/monorail_temperate_grass_8bpp.png") {
		template_railtiles(0, 0, 1)
	}

	//Snow
	replace monorail_arctic_snow(1119, "../graphics/infrastructure/64/pygen/monorail_arctic_snow_8bpp.png") {
		template_railtiles(0, 0, 1)
	}


//General monorail overlays
//Base/junctions
replace monorail_overlay_base(1087, "../graphics/infrastructure/64/monorail_bits_masked_8bpp.png") {
	template_railoverlay_base(0, 0, 1)
}

//Extra/slopes
replacenew monorail_overlay_extra(SLOPED_RAILS, "../graphics/infrastructure/64/monorail_bits_masked_8bpp.png", 4) {
	template_railoverlay_extra(0, 0, 1)
}

//Climate specific maglev

	//Arctic
	replace maglev_arctic(1175, "../graphics/infrastructure/64/pygen/maglev_temperate_grass_8bpp.png") {
		template_railtiles(0, 0, 1)
	}

	//Snow
	replace maglev_arctic_snow(1201, "../graphics/infrastructure/64/pygen/maglev_arctic_snow_8bpp.png") {
		template_railtiles(0, 0, 1)
	}

//General rail overlays
//Base/junctions
replace maglev_overlay_base(1169, "../graphics/infrastructure/64/maglev_bits_8bpp.png") {
	template_railoverlay_base(0, 0, 1)
}

//Extra/slopes
replacenew maglev_overlay_extra(SLOPED_RAILS, "../graphics/infrastructure/64/maglev_bits_8bpp.png", 8) {
	template_railoverlay_extra(0, 0, 1)
}
//Tunnels
//Templates
template template_tunnels_general(x, y, z) {
	[66*z+x*z,  66*z+y*z, 64*z, 64*z-1, -31*z, -32*z ]
	[ 1*z+x*z,  66*z+y*z, 64*z, 64*z-1, -31*z, -62*z ]

	[66*z+x*z, 131*z+y*z, 64*z, 64*z-1, -31*z, -32*z ]
	[ 1*z+x*z, 131*z+y*z, 64*z, 64*z-1, -31*z, -62*z ]

	[66*z+x*z, 196*z+y*z, 64*z, 64*z-1, -31*z, -32*z ]
	[ 1*z+x*z, 196*z+y*z, 64*z, 64*z-1, -31*z, -62*z ]

	[66*z+x*z,   1*z+y*z, 64*z, 64*z-1, -31*z, -32*z ]
	[ 1*z+x*z,   1*z+y*z, 64*z, 64*z-1, -31*z, -62*z ]
}

	//Rail
	replace rail_tunnel_arctic_grass(2365, "../graphics/stations/general/64/pygen/tunnels_rail_temperate_grass_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	replace rail_tunnel_arctic_snow(2397, "../graphics/stations/general/64/pygen/tunnels_rail_arctic_snow_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	//Monorail
	replace monorail_tunnel_arctic_grass(2373, "../graphics/stations/general/64/pygen/tunnels_monorail_temperate_grass_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	replace monorail_tunnel_arctic_snow(2405, "../graphics/stations/general/64/pygen/tunnels_monorail_arctic_snow_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	//Maglev
	replace maglev_tunnel_arctic_grass(2381, "../graphics/stations/general/64/pygen/tunnels_maglev_temperate_grass_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	replace maglev_tunnel_arctic_snow(2413, "../graphics/stations/general/64/pygen/tunnels_maglev_arctic_snow_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	//Road
	replace road_tunnel_arctic_grass(2389, "../graphics/stations/general/64/pygen/tunnels_road_temperate_grass_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

	replace road_tunnel_arctic_snow(2421, "../graphics/stations/general/64/pygen/tunnels_road_arctic_snow_8bpp.png") {
		template_tunnels_general(0, 0, 1)
	}

//Bridges
//Templates
template template_bridgeramps_general(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 47*z-1, -31*z, -24*z ]
	[  66*z+x*z, 1*z+y*z, 64*z, 63*z-1, -31*z, -32*z ]
	[ 131*z+x*z, 1*z+y*z, 64*z, 47*z-1, -31*z, -24*z ]
	[ 196*z+x*z, 1*z+y*z, 64*z, 63*z-1, -31*z, -32*z ]

	[ 261*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 326*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 391*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 456*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
}

// Spritesheet layout as for general, but different order for replacement
template template_bridgeramps_wood(x, y, z) {
	[ 456*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 326*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 261*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]
	[ 391*z+x*z, 1*z+y*z, 64*z, 55*z-1, -31*z, -24*z ]

	[ 196*z+x*z, 1*z+y*z, 64*z, 63*z-1, -31*z, -32*z ]
	[  66*z+x*z, 1*z+y*z, 64*z, 63*z-1, -31*z, -32*z ]
	[ 131*z+x*z, 1*z+y*z, 64*z, 47*z-1, -31*z, -24*z ]
	[   1*z+x*z, 1*z+y*z, 64*z, 47*z-1, -31*z, -24*z ]
}

// base/core bridge templates
template template_bridge_single_rear(x, y, z) {
	[  1*z+x*z, 1*z+y*z, 64*z, 128*z-1, -31*z, -84*z ]
}
template template_bridge_single_front_nwse(x, y, z) {
	[  1*z+x*z, 1*z+y*z, 64*z, 128*z-1, -55*z, -95*z ]
}
template template_bridge_single_front_swne(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 128*z-1,  -7*z, -95*z ]
}

template template_bridge_onespan_rear(x, y, z) {
	template_bridge_single_rear(x+65, y+0, z)
	template_bridge_single_rear(x+0, y+0, z)
}

template template_bridge_onespan_front(x, y, z) {
	template_bridge_single_front_nwse(x+65, y+0, z)
	template_bridge_single_front_swne(x+0, y+0, z)
}

template template_bridge_onespan_rear_rev(x, y, z) {
	template_bridge_single_rear(x+0, y+0, z)
	template_bridge_single_rear(x+65, y+0, z)
}

template template_bridge_onespan_front_rev(x, y, z) {
	template_bridge_single_front_swne(x+0, y+0, z)
	template_bridge_single_front_nwse(x+65, y+0, z)
}

// bridge and infrastructure type-specific templates
template template_suspension_road_1(x, y, z) {
	template_bridge_single_rear(x+0, y+0, z)
	template_bridge_single_rear(x+130, y+0, z)
	template_bridge_single_front_swne(x+0, y+129, z)
	template_bridge_single_front_swne(x+130, y+129, z)
	template_bridge_single_rear(x+260, y+0, z)
	template_bridge_single_rear(x+390, y+0, z)
	template_bridge_single_front_swne(x+260, y+129, z)
	template_bridge_single_front_swne(x+390, y+129, z)
	template_bridge_single_rear(x+65, y+0, z)
	template_bridge_single_rear(x+195, y+0, z)
	template_bridge_single_front_nwse(x+65, y+129, z)
	template_bridge_single_front_nwse(x+195, y+129, z)
	template_bridge_single_rear(x+325, y+0, z)
	template_bridge_single_rear(x+455, y+0, z)
	template_bridge_single_front_nwse(x+325, y+129, z)
	template_bridge_single_front_nwse(x+455, y+129, z)
}

template template_suspension_road_2(x, y, z) {
	template_bridge_single_front_swne(x+0, y+259, z)
	template_bridge_single_front_swne(x+130, y+259, z)
	template_bridge_single_front_swne(x+260, y+259, z)
	template_bridge_single_front_swne(x+390, y+259, z)
	template_bridge_single_front_nwse(x+65, y+259, z)
	template_bridge_single_front_nwse(x+195, y+259, z)
	template_bridge_single_front_nwse(x+325, y+259, z)
	template_bridge_single_front_nwse(x+455, y+259, z)
}

template template_suspension_road_3(x, y, z) {
	template_bridge_single_rear(x+520, y+0, z)
	template_bridge_single_rear(x+585, y+0, z)
	template_bridge_single_front_swne(x+520, y+129, z)
	template_bridge_single_front_nwse(x+585, y+129, z)
	template_bridge_single_front_swne(x+520, y+259, z)
	template_bridge_single_front_nwse(x+585, y+259, z)
}

template template_suspension_road_4(x, y, z) {
	template_bridge_single_rear(x+715, y+0, z)
	template_bridge_single_rear(x+650, y+0, z)
	template_bridge_single_front_nwse(x+715, y+129, z)
	template_bridge_single_front_swne(x+650, y+129, z)
}

template template_suspension_rail_1(x, y, z) {
	template_bridge_single_rear(x+0, y+0, z)
	template_bridge_single_rear(x+130, y+0, z)
	template_bridge_single_rear(x+260, y+0, z)
	template_bridge_single_rear(x+390, y+0, z)
	template_bridge_single_rear(x+65, y+0, z)
	template_bridge_single_rear(x+195, y+0, z)
	template_bridge_single_rear(x+325, y+0, z)
	template_bridge_single_rear(x+455, y+0, z)
}

template template_suspension_rail_3(x, y, z) {
	template_bridge_single_rear(x+520, y+0, z)
	template_bridge_single_rear(x+585, y+0, z)
}

template template_suspension_rail_4(x, y, z) {
	template_bridge_single_rear(x+715, y+0, z)
	template_bridge_single_rear(x+650, y+0, z)
}

template template_suspension_other(x, y, z) {
	template_bridge_single_rear(x+0, y+0, z)
	template_bridge_single_rear(x+130, y+0, z)
	template_bridge_single_rear(x+260, y+0, z)
	template_bridge_single_rear(x+390, y+0, z)
	template_bridge_single_rear(x+65, y+0, z)
	template_bridge_single_rear(x+195, y+0, z)
	template_bridge_single_rear(x+325, y+0, z)
	template_bridge_single_rear(x+455, y+0, z)
	template_bridge_single_rear(x+520, y+0, z)
	template_bridge_single_rear(x+585, y+0, z)
	template_bridge_single_rear(x+715, y+0, z)
	template_bridge_single_rear(x+650, y+0, z)
}

template template_girder(x, y, z) {
	template_bridge_single_rear(x+65, y+0, z)
	template_bridge_single_rear(x+195, y+0, z)
	template_bridge_single_rear(x+325, y+0, z)
	template_bridge_single_rear(x+0, y+0, z)
	template_bridge_single_rear(x+130, y+0, z)
	template_bridge_single_rear(x+260, y+0, z)
}

template template_girder_front(x, y, z) {
	template_bridge_single_front_nwse(x+65, y+129, z)
	template_bridge_single_front_nwse(x+195, y+129, z)
	template_bridge_single_front_nwse(x+325, y+129, z)
	template_bridge_single_front_swne(x+0, y+129, z)
	template_bridge_single_front_swne(x+130, y+129, z)
	template_bridge_single_front_swne(x+260, y+129, z)
	template_bridge_single_front_nwse(x+65, y+259, z)
	template_bridge_single_front_nwse(x+195, y+259, z)
	template_bridge_single_front_swne(x+130, y+259, z)
	template_bridge_single_front_swne(x+260, y+259, z)
}

//Road bridges
//Bridge ramps, general
replace road_bridgeramps_general(2445, "../graphics/bridges/64/pygen/ramps_general_road_8bpp.png") {
	template_bridgeramps_general(0, 0, 1)
}

//Bridge ramps, wood
replace road_bridgeramps_wood(2529, "../graphics/bridges/64/pygen/ramps_wood_road_8bpp.png") {
	template_bridgeramps_wood(0, 0, 1)
}

//Bridge slow steel, plus front sprites and legs
replace road_bridge_slowsteel(2501, "../graphics/bridges/64/pygen/steelslow_road_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
	template_bridge_onespan_front(0, 129, 1)
	template_bridge_onespan_front(0, 259, 1)
}

//Bridge wood, plus front sprites and legs
replace road_bridge_wood(2547, "../graphics/bridges/64/pygen/wood_road_8bpp.png") {
	template_bridge_onespan_rear_rev(0, 0, 1)
	template_bridge_onespan_front_rev(0, 129, 1)
	template_bridge_onespan_front_rev(0, 259, 1)
}

//Bridge fast steel, plus front sprites
replace road_bridge_faststeel(2555, "../graphics/bridges/64/pygen/steelfast_road_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
	template_bridge_onespan_front(0, 129, 1)
}

//Bridge suspension, plus front sprites and legs
replace road_bridge_suspension_1(2453, "../graphics/bridges/64/pygen/suspension_road_8bpp.png") {
	template_suspension_road_1(0, 0, 1)
}

replace road_bridge_suspension_2(2477, "../graphics/bridges/64/pygen/suspension_road_8bpp.png") {
	template_suspension_road_2(0, 0, 1)
}

replace road_bridge_suspension_3(2487, "../graphics/bridges/64/pygen/suspension_road_8bpp.png") {
	template_suspension_road_3(0, 0, 1)
}

replace road_bridge_suspension_4(2495, "../graphics/bridges/64/pygen/suspension_road_8bpp.png") {
	template_suspension_road_4(0, 0, 1)
}

replace road_bridge_girder(2513, "../graphics/bridges/64/pygen/girder_road_8bpp.png") {
	template_girder(0, 0, 1)
	template_girder_front(0, 0, 1)
}

replace road_bridge_tubular(2575, "../graphics/bridges/64/pygen/tubular_road_8bpp.png") {
	template_girder(0, 0, 1)
}

replace road_bridge_tubular_front(2559, "../graphics/bridges/64/pygen/tubular_road_8bpp.png") {
	template_girder_front(0, 0, 1)
}

//Rail bridges
//Bridge ramps, general
replace rail_bridgeramps_general(2437, "../graphics/bridges/64/pygen/ramps_general_rail_8bpp.png") {
	template_bridgeramps_general(0, 0, 1)
}

//Bridge ramps, wood
replace rail_bridgeramps_wood(2537, "../graphics/bridges/64/pygen/ramps_wood_rail_8bpp.png") {
	template_bridgeramps_wood(0, 0, 1)
}

//Bridge slow steel
replace rail_bridge_slowsteel(2499, "../graphics/bridges/64/pygen/steelslow_rail_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge wood
replace rail_bridge_wood(2545, "../graphics/bridges/64/pygen/wood_rail_8bpp.png") {
	template_bridge_onespan_rear_rev(0, 0, 1)
}

//Bridge fast steel
replace rail_bridge_faststeel(2553, "../graphics/bridges/64/pygen/steelfast_rail_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge suspension
replace rail_bridge_suspension_1(2469, "../graphics/bridges/64/pygen/suspension_rail_8bpp.png") {
	template_suspension_rail_1(0, 0, 1)
}

replace rail_bridge_suspension_3(2485, "../graphics/bridges/64/pygen/suspension_rail_8bpp.png") {
	template_suspension_rail_3(0, 0, 1)
}

replace rail_bridge_suspension_4(2493, "../graphics/bridges/64/pygen/suspension_rail_8bpp.png") {
	template_suspension_rail_4(0, 0, 1)
}


replace rail_bridge_girder(2507, "../graphics/bridges/64/pygen/girder_rail_8bpp.png") {
	template_girder(0, 0, 1)
}

replace rail_bridge_tubular(2569, "../graphics/bridges/64/pygen/tubular_rail_8bpp.png") {
	template_girder(0, 0, 1)
}

//Monorail bridges
//Bridge ramps, general
replace monorail_bridgeramps_general(4326, "../graphics/bridges/64/pygen/ramps_general_monorail_8bpp.png") {
	template_bridgeramps_general(0, 0, 1)
}

//Bridge ramps, wood
replace monorail_bridgeramps_wood(4352, "../graphics/bridges/64/pygen/ramps_wood_monorail_8bpp.png") {
	template_bridgeramps_wood(0, 0, 1)
}

//Bridge slow steel
replace monorail_bridge_slowsteel(4324, "../graphics/bridges/64/pygen/steelslow_monorail_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge wood
replace monorail_bridge_wood(4360, "../graphics/bridges/64/pygen/wood_monorail_8bpp.png") {
	template_bridge_onespan_rear_rev(0, 0, 1)
}

//Bridge fast steel
replace monorail_bridge_faststeel(4362, "../graphics/bridges/64/pygen/steelfast_monorail_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge suspension
replace monorail_bridge_suspension(4334, "../graphics/bridges/64/pygen/suspension_monorail_8bpp.png") {
	template_suspension_other(0, 0, 1)
}

replace monorail_bridge_girder(4346, "../graphics/bridges/64/pygen/girder_monorail_8bpp.png") {
	template_girder(0, 0, 1)
}

replace monorail_bridge_tubular(2581, "../graphics/bridges/64/pygen/tubular_monorail_8bpp.png") {
	template_girder(0, 0, 1)
}

//Maglev bridges
//Bridge ramps, general
replace maglev_bridgeramps_general(4366, "../graphics/bridges/64/pygen/ramps_general_maglev_8bpp.png") {
	template_bridgeramps_general(0, 0, 1)
}

//Bridge ramps, wood
replace maglev_bridgeramps_wood(4392, "../graphics/bridges/64/pygen/ramps_wood_maglev_8bpp.png") {
	template_bridgeramps_wood(0, 0, 1)
}

//Bridge slow steel
replace maglev_bridge_slowsteel(4364, "../graphics/bridges/64/pygen/steelslow_maglev_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge wood
replace maglev_bridge_wood(4400, "../graphics/bridges/64/pygen/wood_maglev_8bpp.png") {
	template_bridge_onespan_rear_rev(0, 0, 1)
}

//Bridge fast steel
replace maglev_bridge_faststeel(4402, "../graphics/bridges/64/pygen/steelfast_maglev_8bpp.png") {
	template_bridge_onespan_rear(0, 0, 1)
}

//Bridge suspension
replace maglev_bridge_suspension(4374, "../graphics/bridges/64/pygen/suspension_maglev_8bpp.png") {
	template_suspension_other(0, 0, 1)
}

replace maglev_bridge_girder(4386, "../graphics/bridges/64/pygen/girder_maglev_8bpp.png") {
	template_girder(0, 0, 1)
}

replace maglev_bridge_tubular(2587, "../graphics/bridges/64/pygen/tubular_maglev_8bpp.png") {
	template_girder(0, 0, 1)
}

template template_airport_modern_groundtiles(x, y, z) {
	template_watertiles_single(0, 0, z)
	template_watertiles_single(65, 0, z)
	template_watertiles_single(455, 0, z)
	template_watertiles_single(520, 0, z)
	template_watertiles_single(585, 0, z)
	template_watertiles_single(650, 0, z)
	template_watertiles_single(715, 0, z)
	template_watertiles_single(780, 0, z)
	template_watertiles_single(845, 0, z)
	template_watertiles_single(910, 0, z)
	template_watertiles_single(975, 0, z)
	template_watertiles_single(130, 0, z)
	template_watertiles_single(195, 0, z)
	template_watertiles_single(260, 0, z)
	template_watertiles_single(325, 0, z)
	template_watertiles_single(390, 0, z)
}

replace airport_modern_groundtiles(2634, "../graphics/infrastructure/64/pygen/airport_modern_temperate_grass_8bpp.png") {
	template_airport_modern_groundtiles(0, 0, 1)
}

/// Rocks stuff here

	//Snow 4/4
spriteset (spriteset_rocks, "../graphics/terrain/64/arctic_groundtiles_snow_rocks_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}
	
	//Snow 3/4
spriteset (spriteset_rocks_3, "../graphics/terrain/64/temperate_groundtiles_rocktransition_8bpp.png") {
		template_groundtiles(0, 96, 1)
	}

	
	//Snow 2/4
spriteset (spriteset_rocks_2, "../graphics/terrain/64/temperate_groundtiles_rocktransition_8bpp.png") {
		template_groundtiles(0, 48, 1)
	}
	
	//Snow 1/4
spriteset (spriteset_rocks_1, "../graphics/terrain/64/temperate_groundtiles_rocktransition_8bpp.png") {
		template_groundtiles(0, 0, 1)
	}

switch (FEAT_NEWLANDSCAPE, SELF, switch_snow_density, (ground_density)) {
	0: spriteset_rocks_1;
	1: spriteset_rocks_2;
	2: spriteset_rocks_3;
	3: spriteset_rocks;
}

switch (FEAT_NEWLANDSCAPE, SELF, switch_snow_present, (snow_present)) {
	1: switch_snow_density;
}

switch (FEAT_NEWLANDSCAPE, SELF, switch_rocks, (landscape_type == NEW_LANDSCAPE_TYPE_ROCKS)) {
	1: switch_snow_present;
}

item (FEAT_NEWLANDSCAPE, item_rocks, NEW_LANDSCAPE_ID_ROCKS)  {
	property {
		enable_recolour: 0;
		enable_draw_snowy_rocks: 1;
	}
	graphics {
		default: switch_rocks;
	}
}